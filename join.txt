1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT COUNT(students.id) AS total_students
FROM students
INNER JOIN degrees
ON students.degree_id = degrees.id
WHERE degrees.name = 'Corso di Laurea in Economia';



2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

SELECT departments.name, degrees.level
FROM departments
INNER JOIN degrees
ON departments.id = degrees.department_id
WHERE degrees.level = 'magistrale'
AND departments.id = 7;



3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT course_teacher.course_id, course_teacher.teacher_id
FROM teachers
INNER JOIN course_teacher
ON course_teacher.teacher_id = teachers.id
WHERE teachers.id = 44;



4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT students.name, students.surname, degrees.name AS 'degree', departments.name AS 'department'
FROM students
INNER JOIN degrees 
ON students.degree_id = degrees.id
INNER JOIN departments
ON degrees.department_id = departments.id

ORDER BY students.surname, students.name;



5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT courses.name AS 'course', teachers.name, teachers.surname, degrees.name
FROM course_teacher
INNER JOIN teachers
ON teachers.id = course_teacher.teacher_id
INNER JOIN courses
ON course_teacher.course_id = courses.id
INNER JOIN degrees
ON courses.id = degrees.id



6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT teachers.name, teachers.surname, departments.name AS 'department' 

FROM teachers
INNER JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
INNER JOIN courses
ON course_teacher.course_id = courses.id
INNER JOIN degrees
ON courses.degree_id = degrees.id
INNER JOIN departments
ON degrees.department_id = departments.id

WHERE departments.id = 5;



7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. 


SELECT students.id, COUNT(exam_student.exam_id) AS 'trial',  MAX(exam_student.vote) AS 'max_vote'
FROM students

INNER JOIN exam_student
ON students.id = exam_student.student_id
INNER JOIN exams
ON exam_student.student_id = exams.id
GROUP BY students.id;




Successivamente,
filtrare i tentativi con voto minimo 18.


SELECT students.id, COUNT(exams.id) AS 'trial',  MAX(exam_student.vote) AS 'max_vote'
FROM students

INNER JOIN exam_student
ON students.id = exam_student.student_id
INNER JOIN exams
ON exam_student.student_id = exams.id
GROUP BY students.id

HAVING MAX(exam_student.vote) >= 18;